var ip = {
    get: function (t) {
        window.result = {
            "city_name": "北京市",
            "city": "北京",
            "province_id": 5,
            "province_name": "北京市",
            "ip": "1.202.84.95",
            "city_id": 46,
            "province": "北京市"
        };
        //$.ajax({
        //    url: "http://t.weimall.com/qqips.jsonp", dataType: "script", success: function (result) {
        //        t(result && result.error ? null : result)
        //    }, error: function () {
        //        t(null)
        //    }
        //})
    }
}, trade = {
    cmbchina_query: function (t, n) {
        var o = CONFIG.host + "/shop/trades/" + t + "/cmbchina_query.json";
        $.ajax({
            url: o, data: "_method=put", dataType: "json", type: "post", success: function (t) {
                n(t.trade)
            }, error: function () {
                n(null)
            }
        })
    }, alipay_query: function (t, n) {
        var o = CONFIG.host + "/shop/trades/" + t + "/alipay_query.json";
        $.ajax({
            url: o, data: "_method=put", dataType: "json", type: "post", success: function (t) {
                n(t.trade)
            }, error: function () {
                n(null)
            }
        })
    }, wechat_query: function (t, n) {
        var o = CONFIG.host + "/shop/trades/" + t + "/wechat_query.json";
        $.ajax({
            url: o, data: "_method=put", dataType: "json", type: "post", success: function (t) {
                n(t.trade)
            }, error: function () {
                n(null)
            }
        })
    }, _express_pay: function (t, n) {
        var o = CONFIG.host + "/shop/trades/" + t + "/express_pay.json";
        $.ajax({
            url: o, data: "_method=put", dataType: "json", type: "post", success: function (t) {
                n(t.trade)
            }, error: function () {
                n(null)
            }
        })
    }, checkout: function (t, n, o, e, a) {
        if (o = o || "cmbchina_wap", e = e || "html", "html" === e) {
            var c = [CONFIG.host, "/shop/trades/", t, "/checkout", "?trade[payment_service]=" + o, "&redirect=", n].join("");
            return c
        }
        var s = CONFIG.host + "/shop/trades/" + t + "/checkout.json", r = "trade[payment_service]=" + o + "&redirect=" + n;
        $.ajax({
            url: s, data: r, type: "get", success: function (t) {
                var n = JSON.parse(t);
                a(n.url ? n.url : t)
            }, error: function () {
                a(null)
            }
        })
    }, cancel: function (t, n) {
        var o = CONFIG.host + "/shop/trades/" + t + "/cancel.json";
        $.ajax({
            url: o, data: "_method=put", dataType: "json", type: "post", success: function (t) {
                n(t.trade)
            }, error: function () {
                n(null)
            }
        })
    }, receive: function (t, n) {
        var o = CONFIG.host + "/shop/trades/" + t + "/receive.json";
        $.ajax({
            url: o, data: "_method=put", dataType: "json", type: "post", success: function (t) {
                n(t.trade)
            }, error: function () {
                n(null)
            }
        })
    }, create: function (t, n) {
        var o = CONFIG.host + "/shop/trades.json";
        $.ajax({
            url: o, data: t, type: "POST", dataType: "json", success: function (t) {
                var o = t.trade;
                return o ? void n(o) : (n(null), !1)
            }
        })
    }, get_trade: function (t, n) {
        var o = CONFIG.host + "/shop/trades/" + t + ".json";
        $.ajax({
            url: o, dataType: "json", type: "get", success: function (t) {
                n(t.trade)
            }, error: function () {
                n(null)
            }
        })
    }, get_delivery: function (t, n) {
        var o = CONFIG.host + "/shop/trades/" + t + "/delivery_query.json";
        $.ajax({
            url: o, dataType: "json", type: "get", success: function (t) {
                n(t)
            }, error: function () {
                n(null)
            }
        })
    }
}, products = {
    get_recommend: function (t, n) {
        $.ajax({
            type: "get",
            url: CONFIG.host + "/shop/products/view_units.json?product_id=" + t,
            dataType: "json",
            success: function (t) {
                n(!1)
            },
            error: function () {
                n(!1)
            }
        })
    }, get_pros: function (t, n) {
        -1 == t.indexOf("unsold_count") && (t += "&where[unsold_count][gteq]=0"), $.ajax({
            type: "get",
            url: "/products.json?filter=true&per_page=99999&response=simple",
            data: t,
            dataType: "json",
            success: function (t) {
                n(t)
            },
            error: function () {
                n(!1)
            }
        })
    }, get_category: function (t, n) {
        t = "ids=" + t, $.ajax({
            type: "get",
            url: "/categories.json?response=summary",
            data: t,
            dataType: "json",
            success: function (t) {
                n(t)
            },
            error: function () {
                n(!1)
            }
        })
    }, get_brand: function (t, n) {
        t = "ids=" + t, $.ajax({
            type: "get",
            url: "/brands.json?response=summary",
            data: t,
            dataType: "json",
            success: function (t) {
                n(t)
            },
            error: function () {
                n(!1)
            }
        })
    }, get_info: function (t, n) {
        $.ajax({
            type: "get", url: "/products.json?response=summary&ids=" + t, dataType: "json", success: function (t) {
                n(t)
            }, error: function () {
                n(!1)
            }
        })
    }, get_src: function (t, n) {
        var o = parseInt(.344 * DeviceInfo.width);
        get_cookie("ratio") && (o *= get_cookie("ratio")), $.ajax({
            type: "get",
            url: "/utilities/dynamic_pic?pages_path=" + t + "&pages_size=" + o,
            dataType: "text",
            success: function (t) {
                n(t)
            },
            error: function () {
                n(!1)
            }
        })
    }
}, favorite = {
    get: function (t, n) {
        $.ajax({
            type: "get",
            url: CONFIG.host + "/shop/favorites.json",
            data: $.param({"where[product_id]": t}),
            dataType: "json",
            success: function (t) {
                n(t)
            },
            error: function () {
                n(!1)
            }
        })
    }, add: function (t, n) {
        $.ajax({
            type: "POST",
            url: CONFIG.host + "/shop/favorites.json",
            data: $.param({"favorite[product_id]": t}),
            dataType: "json",
            success: function (t, o) {
                "success" === o && n(t)
            },
            error: function () {
                n(!1)
            }
        })
    }, remove: function (t, n) {
        $.ajax({
            type: "POST",
            url: CONFIG.host + "/shop/favorites/" + t + ".json",
            data: "_method=delete",
            dataType: "json",
            success: function () {
                n(!0)
            },
            error: function () {
                n(!1)
            }
        })
    }
}, contacts = {
    save: function (t, n) {
        $.ajax({
            type: "post",
            url: CONFIG.host + "/shop/contacts.json",
            data: t,
            dataType: "json",
            success: function (t) {
                n(t)
            },
            error: function () {
                n(!1)
            }
        })
    }
}, voucher = {
    add: function (t, n) {
        $.ajax({
            type: "POST",
            url: CONFIG.host + "/shop/vouchers/1.json",
            data: "_method=put&voucher[identifier]=" + t,
            dataType: "json",
            success: function (t) {
                n(t)
            },
            error: function () {
                n(!1)
            }
        })
    }
}, ulife = {
    sent_activation_code: function (t, n) {
        var o = "phone=" + t;
        $.ajax({
            url: "/ulife/send_activation_code.json", type: "POST", data: o, dataType: "json", success: function (t) {
                n(t.response)
            }, error: function (t) {
                n(t.response)
            }
        })
    }, register: function (t, n, o, e, a) {
        var c = "phone=" + t + "&activation_code=" + n;
        o && (c = c + "&password=" + o), e && (c = c + "&city=" + e), $.ajax({
            url: "/ulife/register.json",
            type: "POST",
            data: c,
            dataType: "json",
            success: function (t) {
                a(t)
            },
            error: function (t) {
                a(t)
            }
        })
    }, get_deal: function (t, n) {
        $.ajax({
            url: CONFIG.host + "/pay/deals.json?where[product_id]=" + t,
            type: "get",
            dataType: "json",
            success: function (t) {
                n(t.pay_deals)
            },
            error: function () {
                n(null)
            }
        })
    }
}, cart = {
    add_new: function (t, n) {
        $.ajax({
            type: "post", url: CONFIG.host + "/retail/carts.json", data: t, dataType: "json", success: function (t) {
                n(t)
            }, error: function () {
                n(!1)
            }
        })
    }, get_new: function (t) {
        $.ajax({
            type: "get", url: CONFIG.host + "/retail/carts.json", dataType: "json", success: function (n) {
                t(n)
            }, error: function () {
                t(!1)
            }
        })
    }, del_new: function (t, n) {
        $.ajax({
            type: "POST",
            url: CONFIG.host + "/retail/carts/" + t + ".json",
            data: "_method=delete",
            dataType: "json",
            success: function (t) {
                n(t)
            },
            error: function () {
                n(!1)
            }
        })
    }, get: function (t, n) {
        var o = this.cart_cookie(t + "="), e = {}, a = 0;
        if ("" != o) {
            o = JSON.parse(decodeURIComponent(o));
            for (var c in o)a++
        }
        e = {cart: o, num: a}, n(e)
    }, cart_cookie: function (t) {
        var n = "";
        for (var o in document.cookie.split(";")) {
            var e = document.cookie.split(";")[o].trim();
            e.indexOf(t) > -1 && (n = e.replace(t, ""))
        }
        return n
    }, add_only: function (t, n, o, e, a) {
        var c = {}, s = md5(t + n);
        c[s] = {
            product_id: t,
            measure: n,
            if_product: o
        }, document.cookie = e + "=" + encodeURIComponent(JSON.stringify(c)) + ";path=/;", a(c)
    }
}, user = {
    login: function (t, n, o) {
        var e = "account[login]=" + t + "&account[password]=" + n;
        $.ajax({
            url: CONFIG.host + "/sessions.json", type: "POST", data: e, dataType: "json", success: function (t) {
                o(t)
            }, error: function () {
                o(null)
            }
        })
    }, register: function (t, n, o, e, a, c, s) {
        var r = -1 === t.indexOf("@") ? "phone" : "email", u = "account[" + r + "]=" + t + "&account[password]=" + o + "&account[client]=phone_web&account[password_confirmation]=" + e + "&user[name]=" + n + "&captcha=" + a + "&coupon[code]=" + c;
        $.ajax({
            url: CONFIG.host + "/core/accounts.json", type: "POST", data: u, dataType: "json", success: function (t) {
                s(t)
            }, error: function () {
                s(null)
            }
        })
    }, get_account: function (t, n) {
        $.ajax({
            url: CONFIG.host + "/core/accounts/" + t, type: "GET", dataType: "json", success: function (t) {
                n(t)
            }, error: function () {
                n(null)
            }
        })
    }, get_current: function (t) {
        $.ajax({
            url: CONFIG.wechat_host + "/connections/current.json?",
            type: "GET",
            dataType: "json",
            success: function (n) {
                t(n)
            },
            error: function () {
                t(null)
            }
        })
    }, bind_account: function (t, n) {
        $.ajax({
            url: CONFIG.wechat_host + "/connections/" + t + ".json",
            data: "_method=put",
            dataType: "json",
            type: "post",
            success: function (t) {
                n(t)
            },
            error: function () {
                n(!1)
            }
        })
    }, update_account: function (t, n, o) {
        $.ajax({
            url: CONFIG.host + "/core/accounts/0/update_email_and_password.json",
            data: "_method=put&core_account[password]=" + n + "&core_account[email]=" + t,
            dataType: "json",
            type: "post",
            success: function (t) {
                o(t)
            },
            error: function () {
                o(null)
            }
        })
    }, need_captcha: function (t, n) {
        $.ajax({
            url: CONFIG.host + "/accounts/0.json?account[login]=" + t,
            type: "GET",
            dataType: "json",
            success: function (t) {
                n(t)
            },
            error: function () {
                n(null)
            }
        })
    }, get_captcha: function (t) {
        $.ajax({
            url: CONFIG.host + "/accounts/captcha_image.json", type: "GET", dataType: "json", success: function (n) {
                t(n.url || "")
            }, error: function () {
                t(null)
            }
        })
    }, valid_captcha: function (t, n) {
        $.ajax({
            url: CONFIG.host + "/accounts/validate_captcha.json",
            type: "POST",
            data: $.param({captcha: t}),
            dataType: "json",
            success: function (t) {
                n(t.is_valid)
            },
            error: function () {
                n(null)
            }
        })
    }, get_wechat: function (t, n, o, e) {
        var a = CONFIG.wechat_host + "/connections/new.json?site=" + n + "&type=" + o + "&redirect=" + e;
        $.ajax({
            url: a, type: "GET", dataType: "json", success: function (n) {
                t(n)
            }, error: function () {
                t(null)
            }
        })
    }, get_info: function (t, n) {
        $.ajax({
            url: CONFIG.host + "/users/" + t, type: "GET", dataType: "json", success: function (t) {
                n(t)
            }, error: function () {
                n(null)
            }
        })
    }, set_cookie: function (t) {
        $.ajax({
            url: "/set_cookies", type: "GET", dataType: "json", success: function (n) {
                t(n)
            }, error: function () {
                t(null)
            }
        })
    }
}, fanship = {
    remove: function (t, n) {
        $.ajax({
            type: "POST",
            data: {_method: "delete"},
            url: CONFIG.host + "/shop/fanships/" + t + ".json",
            dataType: "json",
            success: function () {
                n(!0)
            },
            error: function () {
                n(!1)
            }
        })
    }, get: function (t, n) {
        $.ajax({
            type: "GET",
            data: "where[brand_id]=" + t,
            url: CONFIG.host + "/shop/fanships.json",
            dataType: "json",
            success: function (t) {
                n(t)
            },
            error: function () {
                n([])
            }
        })
    }, add: function (t, n) {
        $.ajax({
            type: "POST",
            url: CONFIG.host + "/shop/fanships.json",
            data: "fanship[brand_id]=" + t,
            dataType: "json",
            success: function (t) {
                n(t)
            },
            error: function () {
                n({})
            }
        })
    }
};
